import json
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
import joblib

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
filename = "tetris_dataset_combined.json"
print(f"üìÇ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–∞—Ç–∞—Å–µ—Ç: {filename}")

with open(filename) as f:
    data = json.load(f)

X = []
y = []

for step in data:
    board_flat = np.array(step["board"]).flatten()
    piece_type = step["piece"]["type"]
    piece_type_encoded = ord(piece_type) / 90  # –æ—Ç 0.7 –¥–æ 1.0
    input_vector = np.append(board_flat, piece_type_encoded)
    
    X.append(input_vector)
    y.append(step["move"])

X = np.array(X)
y = np.array(y)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ —á–∏—Å–ª–∞
encoder = LabelEncoder()
y_encoded = encoder.fit_transform(y)

# –†–∞–∑–¥–µ–ª–∏–º –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫—É
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2, random_state=42)

# –û–±—É—á–∞–µ–º RandomForest
model = RandomForestClassifier(n_estimators=100, n_jobs=-1)
model.fit(X_train, y_train)

# –û—Ü–µ–Ω–∏–≤–∞–µ–º
accuracy = model.score(X_test, y_test)
print(f"üéØ –¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Å—Ç–µ: {accuracy:.4f}")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å –∏ –¥–µ–π—Å—Ç–≤–∏—è
joblib.dump(model, "tetris_rf_model.pkl")
with open("action_encoder.json", "w") as f:
    json.dump(encoder.classes_.tolist(), f)

print("‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ tetris_rf_model.pkl")